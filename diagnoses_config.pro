;************************************************************************
;+
; NAME:
;	DIAGNOSES_CONFIG
;
; PURPOSE:
;	Create diagnoses_table.pro and diagnoses_modules.pro based
;	on files in diagnoses/ sub-directory.  The diagnoses_modules
;	will be compiled with EFITViewer.  EFITViewer will use
;	diagnoses_table to construct its diagnostic overlay widget.
;
; CATEGORY:
;
; CALLING SEQUENCE:
;	diagnoses_config
;
; INPUTS:
;
; KEYWORD PARAMETERS:
;
; OUTPUTS:
;	diagnoses_table.pro
;	diagnoses_modules.pro
;	Both files are in ../efitview directory (where this file is).
;
; COMMON BLOCKS:
;
; SIDE EFFECTS:
;
; RESTRICTIONS:
; 	color_setup has to be compiled before this can be run.
;	IDL .pro files in diagnoses/ must be functions whose names
;	are same as their filenames.  Each function must accept
;	the label keyword and when set, returns a string or a
;	a string array.  
;
; PROCEDURE:
;	. finds .pro files in diagnoses/ sub-directory
;	. call each function using its filename with label keyword
;	. if label is not NULL, write the entry in diagnoses_table.pro
;	. for each .pro file found, write an entry in diagnoses_modules.pro
;
; EXAMPLE:
;
; HISTORY:
;	11-02-1999 created by Qian Peng
;	07-05-2002 Q.Peng - search for subdirs of diagnoses/ for different
;                  sites. The subdir name must match mdsvalue('MACHINE()')
;                  from the site's server. If a subdir exists and non-empty,
;                  its files are used, otherwise, it defaults to what's 
;                  found in diagnoses.
;-
;************************************************************************

PRO diagnoses_config
Forward_Function color_list

color_list = color_list()
ncolor = N_Elements(color_list)-1	; execlude color background

evpath = '../efitview/'
!path = expand_path('+'+evpath+'diagnoses:')+':'+!path
path = evpath+'diagnoses/'

OpenW,lun1,evpath+'diagnoses_table.pro',/Get_Lun
OpenW,lun2,evpath+'diagnoses_modules.pro',/Get_Lun
s = "; Do not modify, generated by diagnoses_config.pro on "+systime()
printf,lun1,s
printf,lun2,s
printf,lun1,"PRO diagnoses_table,machine,name=name,label=label,color=color"
printf,lun1,"IF N_Elements(machine) EQ 0 THEN machine = ''"

files = file_search(path+"*.pro",count=c1)
IF c1 EQ 0 THEN BEGIN
   files = file_search(path+"*/*.pro",count=c2) 
ENDIF ELSE BEGIN
   files2 = file_search(path+"*/*.pro",count=c2)
   IF c2 NE 0 THEN files = [files, files2]
END
IF c1+c2 EQ 0 THEN BEGIN
   Message,/Info,$
	"No files found in "+path+". There will be no diagnostic overlays."
   printf,lun1,"name = ''"
   printf,lun1,"END"
   Free_Lun,lun1
   Free_Lun,lun2
   Return
ENDIF

names = StrArr(N_Elements(files))
labels = names
colors = names
subdirs = StrArr(N_Elements(files))

FOR i=0, N_Elements(names)-1 DO BEGIN
   name = Str_Sep(files[i],'/')
   IF N_Elements(name) GT 4 THEN subdirs[i] = name[N_Elements(name)-2]
   name = Str_Sep(name[N_Elements(name)-1],'.')
   names[i] = name[0]   
   result = Execute("Forward_Function "+names[i])
   result = Execute("labelcolor = "+names[i]+"(/label)")
   labels[i] = labelcolor[0]
   IF labels[i] EQ '' THEN labels[i] = names[i]

   IF N_Elements(labelcolor) GT 1 THEN colors[i] = labelcolor[1] $
   ELSE colors[i] = color_list[i mod ncolor + 1]

   if ( (names[i] eq 'echres') || (names[i] eq 'nbiplot') || (names[i] eq 'ichres') ) then begin
      print,'ECHRES and NBIPLOT not added to diagnoses modules file.  Handled by efitviewerstartup.'
   endif else begin
      printf,lun2,".compile $EFITVIEW/diagnoses/"+subdirs[i]+"/"+names[i]+".pro"
   endelse
END

subdir = subdirs[uniq(subdirs,sort(subdirs))]
FOR idir=0, N_Elements(subdir)-1 DO BEGIN
   index = Where(subdirs EQ subdir[idir])
   names_s = names[index]
   labels_s = labels[index]
   colors_s = colors[index]

   IF subdir[idir] NE '' THEN BEGIN  ; if there is '', it should be the 1st
      IF idir EQ 0 THEN printf,lun1,"CASE machine OF" ELSE $
      IF subdir[idir-1] EQ '' THEN printf,lun1,"CASE machine OF"
      printf,lun1,"'"+subdir[idir]+"': BEGIN"
   ENDIF

   printf,lun1,"name = [ $"
   FOR i=0, N_Elements(names_s)-1 DO BEGIN
      IF StrUpCase(labels_s[i]) NE "NULL" THEN BEGIN		; do NOT include NULLs
         IF i EQ 0 THEN printf,lun1,"  '"+names_s[i]+"' $" $
	           ELSE printf,lun1,", '"+names_s[i]+"' $"
      ENDIF
   END
   printf,lun1,"]"

   printf,lun1,"label = [ $"
   FOR i=0, N_Elements(names_s)-1 DO BEGIN
      IF StrUpCase(labels_s[i]) NE "NULL" THEN BEGIN
         IF i EQ 0 THEN printf,lun1,"  '"+labels_s[i]+"' $" $
	           ELSE printf,lun1,", '"+labels_s[i]+"' $"
      ENDIF
   END
   printf,lun1,"]"

   printf,lun1,"color = [ $"
   FOR i=0, N_Elements(names_s)-1 DO BEGIN
      IF StrUpCase(labels_s[i]) NE "NULL" THEN BEGIN
         IF i EQ 0 THEN printf,lun1,"  '"+colors_s[i]+"' $" $
	           ELSE printf,lun1,", '"+colors_s[i]+"' $"
      ENDIF
END
printf,lun1,"]"

IF subdir[idir] NE '' THEN printf,lun1,"END"
END ; idir

IF (N_Elements(subdir) EQ 1 AND subdir[0] NE '') OR $
   (N_Elements(subdir) GT 1) THEN BEGIN
  printf,lun1,"ELSE: IF N_Elements(name) EQ 0 THEN name='name'"
  printf,lun1,"ENDCASE"
ENDIF

printf,lun1,"END"

Free_Lun,lun1
Free_Lun,lun2
END

